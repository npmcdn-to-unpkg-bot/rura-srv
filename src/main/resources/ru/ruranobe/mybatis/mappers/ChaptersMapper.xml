<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ru.ruranobe.mybatis.mappers.ChaptersMapper">

    <!--cache type="org.mybatis.caches.ehcache.EhcacheCache">
        <property name="timeToIdleSeconds" value="3600"/>
        <property name="timeToLiveSeconds" value="3600"/>
        <property name="maxEntriesLocalHeap" value="1000"/>
        <property name="maxEntriesLocalDisk" value="10000000"/>
        <property name="memoryStoreEvictionPolicy" value="LRU"/>
    </cache-->

    <select id="getChaptersByVolumeId" parameterType="int" resultMap="ChaptersResult">
        SELECT *
        FROM chapters
        WHERE volume_id = #{volumeId}
        ORDER BY order_number ASC
    </select>

    <select id="getChapterByUrl" parameterType="String" resultMap="ChaptersResult">
        SELECT *
        FROM chapters
        WHERE url = #{url}
    </select>

    <select id="getChapterById" parameterType="int" resultMap="ChaptersResult">
        SELECT *
        FROM chapters
        WHERE chapter_id = #{chapterId}
    </select>

    <select id="getChapterNextPrevByUrl" parameterType="String" resultMap="ChaptersResult">
        SELECT
            c.*,
            prev_c.url        prev_url,
            next_c.url        next_url,
            prev_c.chapter_id prev_chapter_id,
            next_c.chapter_id next_chapter_id,
            prev_c.nested     prev_chapter_nested
        FROM
        (
            SELECT
                c.*,
                (
                    SELECT max(order_number)
                    FROM chapters
                    WHERE chapters.order_number &lt; c.order_number
                      AND chapters.volume_id = c.volume_id
                    ORDER BY order_number DESC
                    LIMIT 1
                ) AS prev_order_number,
                (
                    SELECT min(order_number)
                    FROM chapters
                    WHERE chapters.order_number &gt; c.order_number
                      AND chapters.volume_id = c.volume_id
                    ORDER BY order_number ASC
                    LIMIT 1
                ) AS next_order_number
            FROM chapters c
            INNER JOIN volumes USING (volume_id)
            WHERE c.url = #{url}
        ) c
        LEFT JOIN chapters prev_c
          ON c.prev_order_number = prev_c.order_number
         AND c.volume_id = prev_c.volume_id
        LEFT JOIN chapters next_c
          ON c.next_order_number = next_c.order_number
         AND c.volume_id = next_c.volume_id
    </select>

    <insert id="insertChapter" parameterType="ru.ruranobe.mybatis.entities.tables.Chapter" keyProperty="chapterId" useGeneratedKeys="true">
        insert into chapters (volume_id, text_id, url, title, order_number, published, nested)
        values (#{volumeId}, #{textId}, #{url}, #{title}, #{orderNumber}, #{published}, #{nested})
    </insert>

    <delete id="deleteChapter" parameterType="int">
        delete from chapters where chapter_id=#{chapterId}
    </delete>

    <update id="updateChapter" parameterType="ru.ruranobe.mybatis.entities.tables.Chapter">
        update chapters set volume_id = #{volumeId}, text_id=#{textId}, url=#{url}, title = #{title}, order_number=#{orderNumber},
        published=#{published}, nested=#{nested}
        where chapter_id=#{chapterId}
    </update>

    <resultMap type="ru.ruranobe.mybatis.entities.tables.Chapter" id="ChaptersResult">
        <id property="chapterId" column="chapter_id"/>
        <result property="volumeId" column="volume_id"/>
        <result property="textId" column="text_id"/>
        <result property="url" column="url"/>
        <result property="title" column="title"/>
        <result property="orderNumber" column="order_number"/>
        <result property="published" column="published"/>
        <result property="nested" column="nested"/>

        <result property="prevUrl" column="prev_url"/>
        <result property="nextUrl" column="next_url"/>
        <result property="prevChapterId" column="prev_chapter_id"/>
        <result property="nextChapterId" column="next_chapter_id"/>
        <result property="prevChapterNested" column="prev_chapter_nested"/>
    </resultMap>

</mapper>