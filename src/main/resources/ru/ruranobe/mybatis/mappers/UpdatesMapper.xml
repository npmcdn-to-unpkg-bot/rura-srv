<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ru.ruranobe.mybatis.mappers.UpdatesMapper">
    
    <select id="getLastUpdatesBy" parameterType="map" resultType="ru.ruranobe.mybatis.tables.Update">
         select last_updates.update_id as updateId,
                last_updates.update_type as updateType,
                last_updates.volume_id as volumeId,
                last_updates.chapter_id as chapterId,
                last_updates.show_time as showTime,
                last_updates.description as description,
                c.title as chapterTitle,
                v.name_ru as volumeTitle,
                c.url as chapterUrl,
                v.url as volumeUrl
        from
        (
                select update_id,
                       update_type,
                       volume_id,
                       chapter_id,
                       show_time,
                       description
                from updates
                where show_time &lt; (now())
                  and (volume_id = #{volumeId} or #{volumeId} is null)
                  and (project_id = #{projectId} or #{projectId} is null)
                  and (update_type = #{updateType} or #{updateType} is null)
                order by show_time
                limit #{limitFrom}, #{limitTo}
        ) last_updates
        left join chapters c
          on last_updates.chapter_id = c.chapter_id
        left join volumes v
          on last_updates.volume_id = v.volume_id
    </select>
    
    <select id="getUpdatesCountBy" resultType="int">
        select count(*)
        from updates
        where (volume_id = #{volumeId} or #{volumeId} is null)
          and (project_id = #{projectId} or #{projectId} is null)
          and (update_type = #{updateType} or #{updateType} is null)
    </select>
    
</mapper>
